{"version":3,"sources":["games/hangman/components/word/word.js","games/hangman/components/result/result.js","games/hangman/components/letters/letters.js","games/hangman/hangman.js","utilities/utilities.js","games/runner/ActionGame.js","games/memory/Memory.js","games/welcome/welcome.js","App.js","reportWebVitals.js","index.js"],"names":["Word","hitLetters","letter","indexOf","word","this","props","value","split","map","i","className","isVisible","isOver","charAt","toUpperCase","slice","uuidv4","React","Component","Result","handlePlayAgain","bind","playAgain","chance","src","alt","isWin","onClick","Letters","handleTry","handleDisablingButtons","e","try","target","id","Number","dataset","disablingButtons","letters","l","disabled","Hangman","state","usedLetters","selectWord","toLowerCase","words","Math","floor","random","length","tmp","push","setState","st","filter","defaultProps","getScore","game","result","order","score","localStorage","getItem","setItem","message","ActionGame","move","isEnd","iteration","obstaclePosition","handleKeyDown","placeObstacle","gameRef","createRef","characterRef","obstacleRef","intervaIsEnd","intervalPlaceObstacle","document","addEventListener","m","setTimeout","character","current","obstacle","gameWidth","parseInt","getComputedStyle","getPropertyValue","gameHeight","bottomCharacter","heightCharacter","leftObstacle","dangerZone","gameOver","clearInterval","setInterval","keyCode","op","img","ref","style","backgroundImage","bottom","Memory","cards","toggle","openCard1","openCard2","moves","startGame","c","isHidden","idx","splice","t","hideCards","every","openCard","v","Welcome","Container","fluid","Row","xs","md","games","g","Card","width","margin","to","Img","height","variant","Body","Title","Text","App","Navbar","bg","Brand","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d9541ac3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './word.css';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n// background-image: url('images/graph-line.jpg');\r\n\r\nclass Word extends React.Component{\r\n    \r\n    isVisible(hitLetters,letter){\r\n        return hitLetters.indexOf(letter)>=0 ? true : false; \r\n    }\r\n\r\n    render(){\r\n        let word = this.props.value.split(\"\");  \r\n        let hitLetters = this.props.hitLetters;\r\n         \r\n        return(\r\n            <> \r\n            {word.map((letter,i)=>\r\n                <div key={uuidv4()} className=\"field\">\r\n                    <span className={`letter ${(this.isVisible(hitLetters,letter) || this.props.isOver) && \"visible\"}`}> { i===0 ? letter.charAt(0).toUpperCase()+letter.slice(1) : letter}</span>\r\n                </div>)\r\n            } \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Word;","import React from 'react';\r\n\r\nclass Result extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.handlePlayAgain = this.handlePlayAgain.bind(this)\r\n    }\r\n    handlePlayAgain(){\r\n        this.props.playAgain();\r\n    }\r\n    render(){\r\n        let chance = this.props.chance;\r\n        if(chance<1) chance=0; \r\n\r\n        return(\r\n            <>\r\n            <img src= {`images/hangman/hangman/${chance}.png`} alt=\"hangman\"/>\r\n            {(this.props.isOver || this.props.isWin) && \r\n                <>\r\n                {this.props.isOver && <h2>Game Over</h2>}\r\n                {this.props.isWin && <h2>You Won!</h2>}\r\n                <button onClick={this.handlePlayAgain}>Play again</button>\r\n                </>\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport './letters.css';\r\n\r\nclass Letters extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.handleTry = this.handleTry.bind(this);\r\n        this.handleDisablingButtons = this.handleDisablingButtons.bind(this)\r\n    }\r\n    handleTry(e){ \r\n        this.props.try(e.target.value)\r\n        let id = Number(e.target.dataset.id);\r\n        this.handleDisablingButtons(id)\r\n    }\r\n    handleDisablingButtons(id){\r\n        this.props.disablingButtons(id)\r\n    }\r\n    render(){ \r\n        return(\r\n            <> \r\n            {this.props.letters.map((l,i)=>\r\n                <button \r\n                    key={uuidv4()} \r\n                    data-id={i}\r\n                    onClick={this.handleTry} \r\n                    value={l} \r\n                    disabled={(this.props.isOver || this.props.disabled.indexOf(i)!==-1)}>\r\n                    {l}\r\n                </button>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Letters;","import React from 'react';\r\nimport Word from './components/word/word';\r\nimport Result from './components/result/result';\r\nimport Letters from './components/letters/letters';\r\nimport \"./hangman.css\";\r\n\r\nclass Hangman extends React.Component{\r\n    static defaultProps = {\r\n        letters: \"abcdefghijklmnopqrstuvxyz\".split(\"\"),\r\n        words: [\"Athens\",\"Belgrade\",\"Berlin\",\"Bern\",\"Bratislava\",\"Brussels\",\"Bucharest\",\"Budapest\",\"Chisinau\",\"Copenhagen\",\"Dublin\",\"Helsinki\",\"Kiev\",\"Lisbon\",\"Ljubljana\",\"London\",\"Luxembourg\",\"Madrid\",\"Minsk\",\"Monaco\",\"Moscow\",\"Nicosia\",\"Oslo\",\"Paris\",\"Podgorica\",\"Prague\",\"Reykjavik\",\"Riga\",\"Rome\",\"Sarajevo\",\"Skopje\",\"Stockholm\",\"Tallinn\",\"Vienna\",\"Vilnius\",\"Warsaw\",\"Zagreb\"]\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            usedLetters:[],\r\n            hitLetters:[],\r\n            chance:6, \r\n            disabled:[]\r\n        }\r\n        this.word = (this.selectWord()).toLowerCase();\r\n       \r\n        //functions binding\r\n        this.try = this.try.bind(this)\r\n        this.playAgain = this.playAgain.bind(this)\r\n        this.disablingButtons = this.disablingButtons.bind(this)\r\n    }\r\n\r\n    selectWord(){\r\n         return this.props.words[Math.floor(Math.random()*this.props.words.length)]\r\n    }\r\n\r\n    try(e){  \r\n        let letter = e;\r\n        let word = this.word.split(\"\");  \r\n\r\n        //set usedLetter\r\n        let tmp = [...this.state.usedLetters];\r\n        tmp.push(letter);\r\n        this.setState(st=>{return {usedLetters: tmp}}); \r\n        \r\n        //set hitLetters\r\n        let hitLetters = this.state.hitLetters;\r\n        let indx = word.indexOf(letter);\r\n        //hit\r\n        if(indx>=0){\r\n            hitLetters.push(...word.filter(l=>l===letter))\r\n            this.setState(st=>{return {hitLetters:hitLetters}}) \r\n        }\r\n        //miss\r\n        else{\r\n            this.setState(st=>{return {chance:st.chance-1}})\r\n        }\r\n        \r\n    }\r\n\r\n    disablingButtons(id){\r\n        this.setState({disabled: [...this.state.disabled, id]}) \r\n    }\r\n\r\n    playAgain(e){\r\n        this.word = (this.selectWord()).toLowerCase();\r\n        this.setState(st=>{\r\n            return{\r\n            usedLetters:[],\r\n            hitLetters:[],\r\n            chance:6, \r\n            disabled:[]\r\n            }\r\n        })\r\n    }\r\n \r\n\r\n    render(){  \r\n        let isWin = this.word.length === this.state.hitLetters.length;\r\n        let isOver = this.state.chance<1; \r\n        \r\n        return(\r\n            <div className=\"hangman\" >\r\n                \r\n                <h1>Cities</h1>\r\n                \r\n                <div className=\"letters-container\">\r\n                    <Letters letters={this.props.letters} try={this.try} chance={this.state.chance} isOver={isOver || isWin} disablingButtons={this.disablingButtons} disabled={this.state.disabled}/>\r\n                </div> \r\n                <div className=\"word-container\">\r\n                    <Word value={this.word} hitLetters={this.state.hitLetters} isOver={isOver}/>\r\n                </div> \r\n                <div className=\"result\" >\r\n                    <Result chance={this.state.chance} isOver={isOver} isWin={isWin} playAgain={this.playAgain}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hangman;","export function getScore(game,result, order=\"asc\"){\r\n\tlet score = localStorage.getItem(game) || 0;\r\n    if(score===0){\r\n  \t    localStorage.setItem(game,result); \r\n  \t    return{message:\"\", result:result}\r\n    }\r\n    if(order.toLowerCase()===\"asc\" && result<score){\r\n        localStorage.setItem(game,result); \r\n        return{message:\"New record!\", result:result}\r\n    }\r\n    if(order.toLowerCase()===\"desc\" && result>score){\r\n        localStorage.setItem(game,result); \r\n        return{message:\"New record!\", result:result}\r\n    } \r\n    return{message:`High score: ${score}`, result:result}  \r\n}","import React from 'react';\r\nimport {FaRedo} from 'react-icons/fa';\r\nimport { getScore } from '../../utilities/utilities';\r\nimport './ActionGame.css';\r\n\r\n\r\nclass ActionGame extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            move:\"\",\r\n            isEnd:true,\r\n            iteration:0,\r\n            obstaclePosition:0,\r\n            result:null\r\n        }\r\n        this.move = this.move.bind(this); \r\n        this.handleKeyDown = this.handleKeyDown.bind(this);  \r\n        this.isEnd = this.isEnd.bind(this);\r\n        this.playAgain = this.playAgain.bind(this);\r\n        this.placeObstacle = this.placeObstacle.bind(this);\r\n        this.gameRef = React.createRef();\r\n        this.characterRef = React.createRef();\r\n        this.obstacleRef = React.createRef(); \r\n        this.intervaIsEnd=null;\r\n        this.intervalPlaceObstacle=null; \r\n    }\r\n    \r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.handleKeyDown); \r\n    }\r\n\r\n    move(m){ \r\n        if(m!==\"jump\" && m!==\"down\") throw(\"The move can be either a jump or down\")\r\n        if(this.state.move!==m){\r\n            this.setState((st)=>{return{move:m}})\r\n        }\r\n        setTimeout(()=>{\r\n            this.setState({move:\"\"})\r\n        },500)\r\n    } \r\n\r\n    placeObstacle(){ \r\n        if(!this.state.isEnd) {\r\n            this.setState({obstaclePosition: Math.floor(Math.random()*3)});\r\n        }\r\n    }\r\n\r\n    isEnd(){\r\n        let character = this.characterRef.current;\r\n        let obstacle = this.obstacleRef.current;\r\n        let game = this.gameRef.current;\r\n        if(!game)return;\r\n        let gameWidth = parseInt(getComputedStyle(game).getPropertyValue(\"width\"));\r\n        let gameHeight = parseInt(getComputedStyle(game).getPropertyValue(\"height\"));\r\n        let bottomCharacter = parseInt(getComputedStyle(character).getPropertyValue(\"bottom\"));\r\n        let heightCharacter = parseInt(getComputedStyle(character).getPropertyValue(\"height\"));\r\n        let leftObstacle = parseInt(getComputedStyle(obstacle).getPropertyValue(\"left\"));\r\n        let dangerZone = leftObstacle>=10*gameWidth/100 && leftObstacle<=20*gameWidth/100;\r\n        \r\n        const gameOver=()=>{\r\n            this.setState({isEnd:true});\r\n            clearInterval(this.intervaIsEnd);\r\n            clearInterval(this.intervalPlaceObstacle);\r\n            this.setState({result: getScore(\"runner\",this.state.iteration,\"desc\")}) \r\n        }\r\n\r\n        if(this.state.obstaclePosition===0 && dangerZone && bottomCharacter<40*gameHeight/100 ){\r\n            gameOver();    \r\n        }\r\n        if(this.state.obstaclePosition===1 && dangerZone){\r\n            if(heightCharacter<=10*gameHeight/100)return\r\n            else if(bottomCharacter>40*gameHeight/100)return\r\n            else gameOver(); \r\n        }\r\n        if(this.state.obstaclePosition===2 && dangerZone && heightCharacter>10*gameHeight/100 )gameOver();\r\n\r\n\r\n        this.setState((st)=>{return{iteration:st.iteration+1}})\r\n    }\r\n    \r\n    playAgain(){\r\n        this.setState({move:\"\"});\r\n        this.setState({obstaclePosition:0})\r\n        this.setState({isEnd:false});\r\n        this.setState({iteration:0}); \r\n        this.intervaIsEnd = setInterval(this.isEnd,50);\r\n        this.intervalPlaceObstacle = setInterval(this.placeObstacle,1000);\r\n    }\r\n\r\n    handleKeyDown(e){\r\n        if (e.keyCode === 40) this.move(\"down\")\r\n        if (e.keyCode === 38) this.move(\"jump\")\r\n    }\r\n\r\n    render(){\r\n        let obstaclesBottoms=[10,25,30];\r\n        let op = obstaclesBottoms[this.state.obstaclePosition];\r\n\r\n        let img=\"stay\";\r\n        if(this.state.move===\"\" && !this.state.isEnd){\r\n            img=\"running\";\r\n        }\r\n        if(this.state.move===\"jump\"){\r\n            img=\"jump\"\r\n        }\r\n        if(this.state.move===\"down\"){\r\n            img=\"down\"\r\n        }\r\n        let gameOver = (\r\n                        <div className=\"gameOver\">\r\n                            <p>Game Over</p><FaRedo onClick={this.playAgain}/>\r\n                            {this.state.result && <div className=\"score\"> Your score: {this.state.result.result+1} <br/> {this.state.result.message} </div>}\r\n                        </div>\r\n                        );\r\n \r\n        return(\r\n            <>\r\n            <div className=\"action-game\" ref={this.gameRef} style={{backgroundImage:\"url(images/Runner/sky.jpg)\"}}>\r\n                {(this.state.isEnd===true && this.state.iteration===0) && <h1 className=\"title\">Runner</h1>}\r\n                <div \r\n                    className={`character ${!this.state.isEnd && this.state.move}`} \r\n                    ref={this.characterRef}\r\n                    >\r\n                    <img src= {`images/Runner/${img}.gif`} alt=\"character\"/> \r\n                </div>\r\n\r\n                <div className= {!this.state.isEnd ? \"obstacle\" : \"unvisible\"} style={{bottom: `${op}%`, backgroundImage:\"url(images/Runner/ground.jpg)\"}} ref={this.obstacleRef}></div>\r\n\r\n                <div className={`ground ${!this.state.isEnd && \"groundAnimation\"}`} style={{backgroundImage:\"url(images/Runner/ground.jpg)\"}}></div>\r\n            \r\n                {this.state.isEnd && this.state.iteration>0 && gameOver}\r\n\r\n                \r\n\r\n            </div>            \r\n\r\n            <div>\r\n                <button onClick={this.playAgain} disabled={!this.state.isEnd}>Play Game</button> \r\n                <p>{this.state.iteration}</p>\r\n            </div> \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionGame;","import React from 'react';\r\nimport { getScore } from '../../utilities/utilities';\r\nimport './Memory.css';\r\n\r\nclass Memory extends React.Component{\r\n    static defaultProps  = {\r\n        cards:[\"book\",\"tree\",\"cat\",\"bell\",\"cup\",\"apple\"]\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            cards:[],\r\n            toggle:false,\r\n            openCard1:{id:0, value:\"\"},\r\n            openCard2:{id:0, value:\"\"},\r\n            moves:0,\r\n            result:null\r\n        }\r\n        this.move = this.move.bind(this);\r\n        this.startGame = this.startGame.bind(this)\r\n    }\r\n\r\n    startGame(){\r\n        let tmp = [...this.props.cards,...this.props.cards].map((c,i)=>{ return {id:i+1, value:c, isHidden:false} });\r\n        let cards = [];\t \r\n        while(tmp.length>0){\r\n            let idx=Math.floor(Math.random()*tmp.length);\r\n            cards.push(tmp[idx]);\r\n            tmp.splice(idx,1)\r\n        } \r\n        this.setState({\r\n            cards:cards,\r\n            openCard1:{id:0,value:\"\"},\r\n            openCard2:{id:0,value:\"\"},\r\n            moves:0,\r\n            result:null\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.startGame();\r\n    }\r\n\r\n    hideCards(value){\r\n        let tmp = this.state.cards;\r\n        tmp.map(t => { if(t.value===value) t.isHidden=true; return t})\r\n        this.setState({cards: tmp});\r\n    }\r\n\r\n    move(e){\r\n        let value = e.target.dataset.value;\r\n        let id = e.target.dataset.id;\r\n        let toggle = this.state.toggle;\r\n\r\n        this.setState((st)=>{return{toggle:!st.toggle}});\r\n        toggle = !this.state.toggle;\r\n        \r\n        if(toggle){\r\n            this.setState((st)=>{return{openCard1:{id:id, value:value}}}); \r\n            this.setState({openCard2:{id:0,value:\"\"}});\r\n        }\r\n        else{\r\n            this.setState((st)=>{return{openCard2:{id:id, value:value}}});\r\n            if(this.state.cards.length>0 && this.state.openCard1.id !== id )\r\n            this.setState((st)=>{return{moves: st.moves+1}})\r\n            if((this.state.openCard1.value === value) && this.state.openCard1.id !== id ){ \r\n                this.hideCards(value);\r\n            }\r\n        }\r\n        if(this.state.cards.every(c=>c.isHidden===true)){\r\n            this.setState({result:getScore(\"Memory\",this.state.moves+1,\"asc\")})\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        let cards = this.state.cards;\r\n        var openCard = (i,v)=>{ return (parseInt(this.state.openCard1.id)===i || parseInt(this.state.openCard2.id)===i) ? v : \"card\"}\r\n          \r\n        {this.state.result && <div className=\"score\"> Your score: {this.state.result.result+1} <br/> {this.state.result.message} </div>}\r\n        \r\n        return( \r\n            <div className=\"memory\">\r\n                <h1>Memory</h1> \r\n                <div className=\"cards\">    \r\n                    {cards.map(c=> \r\n                    <div \r\n                        key={c.id} \r\n                        className={`${openCard(c.id)} card ${c.isHidden && \"hidden\"} `} \r\n                        data-value={c.value}\r\n                        data-id={c.id} \r\n                        onClick={this.move}\r\n                        style={{backgroundImage:`url(images/Memory/${openCard(c.id,c.value)}.png)`}}\r\n                    >   \r\n                    </div>)}\r\n                </div> \r\n                {this.state.result && <div className=\"button\"><button onClick={this.startGame}>Play Again</button></div> }\r\n                 \r\n                <h2>Number of moves: {this.state.moves}</h2>\r\n\r\n                {this.state.result && <p> {this.state.result.message}</p> }\r\n                 \r\n            </div>\r\n            )\r\n        }\r\n}\r\n\r\nexport default Memory;\r\n ","import React from \"react\";\r\nimport { Card, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Welcome extends React.Component{\r\n    render(){\r\n        return(  \r\n            <Container fluid>\r\n                <Row className=\"justify-content-center\" xs={1} md={2}>   \r\n                    {\r\n                        this.props.games.map(g=>\r\n                            <Card style={{ width: '18rem', margin:\"1em\" }} key={g} >\r\n                                <Link to={`/${g}`}>\r\n                                    <Card.Img style={{height:\"250px\"}} variant=\"top\" src={`/images/${g}/${g}-card.png`} />\r\n                                </Link>\r\n                                <Card.Body>\r\n                                    <Link to={`/${g}`}><Card.Title>{g}</Card.Title></Link>\r\n                                    <Card.Text></Card.Text> \r\n                                </Card.Body>\r\n                            </Card>\r\n                        )\r\n                    } \r\n                </Row>    \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Welcome;","import Hangman from './games/hangman/hangman';\nimport ActionGame from './games/runner/ActionGame';\nimport Memory from './games/memory/Memory';  \nimport {Route, Switch, Link} from 'react-router-dom';\nimport './App.css';\nimport Welcome from './games/welcome/welcome';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Navbar } from 'react-bootstrap';\nimport {CgGames} from 'react-icons/cg';\n\n\nfunction App() {\n  const games=[\"Hangman\",\"Runner\",\"Memory\"];\n  return (\n     \n    <div className='App'>\n        \n      <Navbar bg=\"dark\" variant=\"dark\" className=\"App-header\">\n        <Container fluid>\n          <Navbar.Brand><Link to=\"/\"> <CgGames/> Games </Link></Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\" render={()=><Welcome games={games}/>} /> \n        <Route exact path=\"/Hangman\" component={Hangman}/>\n        <Route exact path=\"/Runner\" component={ActionGame}/> \n        <Route exact path=\"/Memory\" component={Memory}/>\n      </Switch>\n\n    </div> \n \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,    \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}